#!/bin/bash

set -e

APP_DIR=$1
DEPS_DIR=$3
IDX=$4

log_prefix='-----> [env-map-buildpack]'

CONFIG=${ENV_MAP_BP_CONFIG:-"env-map.yml"}
echo "$log_prefix Creating profile.d file using $CONFIG"

if [[ $CONFIG =~ .json ]]; then
  JSON_CONFIG="$(< "$APP_DIR/$CONFIG")"
else
  echo "$log_prefix Downloading yq"
  curl --silent --location https://github.com/mikefarah/yq/releases/download/2.4.1/yq_linux_amd64 -o yq
  chmod +x yq
  JSON_CONFIG="$(./yq r "$APP_DIR/$CONFIG" -j)"
fi

profile_dir="$DEPS_DIR/$IDX/profile.d"
mkdir -p "$profile_dir"
profile_file="$profile_dir/$IDX-mapped-env-vars.sh"

for var in $(echo "$JSON_CONFIG" | jq -r '.env_vars | keys[]'); do
  selector="$(echo "$JSON_CONFIG" | jq -r ".env_vars.$var")"
  echo "export $var=\"\$(echo \$VCAP_SERVICES | jq -r '$selector')\"" >> "$profile_file"
done

# HACK:
# The java buildpack doesn't support loading environment variables from .profile.d in deps/ID/profile.d
# So we also have to copy it to app/.profile.d
#
# See https://github.com/cloudfoundry/java-buildpack/issues/563#issuecomment-452437417
# and https://github.com/cyberark/cloudfoundry-conjur-buildpack/blob/31f4cbef/bin/supply#L96-L115
mkdir -p "$APP_DIR/.profile.d/"
cp "$profile_file" "$APP_DIR/.profile.d/"

echo "$log_prefix Done."
exit 0

